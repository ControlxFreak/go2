# --------------------------------------------------------------------- #
#!/bin/bash
# nickname
# 	A handy helper function to create the .config/nickname.conf file.
#	The goal of this configuration file is to generate nicknames for directories so the go2 function can easily lookup a nickname and change the directory to that associated location.
#
# Anthony Trezza
# 12 March 2018
# anthony.t.trezza@gmail.com
#
# License:
#	TBD
#
# Change Log:
#	- 12 March 2018 trezza nickname's birthday! <(^.^)>
# --------------------------------------------------------------------- #

# 0. Define a helper function
function verify_config {
	
	# Read through the file and check for the directory or nickname 
	while IFS='' read -r line || [[ -n "$line" ]]; do
		
		index=0
		for entry in $(echo $line | sed "s/,/ /g"); do
			if [ $index == 0 ]; then
				ENTRY_NN="$entry"
			elif [ $index == 1 ]; then
				ENTRY_DIR="$entry"	
			fi

			((index = index + 1))
		done

		if [ "$ENTRY_NN" == "$NN" ]; then
			echo "Nickname already in use."
			echo "$NN -> $ENTRY_DIR"
			exit
		fi

		echo "$ENTRY_DIR"
		echo "$DIR"
		if [ "$ENTRY_DIR" == "$DIR" ]; then
			echo "Directory already in use."
			echo "$ENTRY_NN -> $ENTRY_DIR"
			echo "Do you want to renickname this directory?"
			
			read yn </dev/tty
			case $yn in
			"Yes"|"yes"|"y"|"Y")
				echo "$line"
				echo "/$ENTRY_NN/d"
				echo $CONFILE
				sed -i "/$ENTRY_NN/d" $CONFILE
				echo "$ENTRY_NN -> $ENTRY_DIR Nickname Deleted."
				return;;
			"No"|"no"|"n"|"N")
				echo "Exiting..."
				exit;;
			esac
		fi

	done < "$CONFILE"
}

# 1. Check the number of inputs
if [ "$#" -eq 0 -o "$#" -gt 2 ]; then
	printf "Invalid Number of Input Arguments.\nSee nickname --help for usage.\n"
	exit 1
fi

# 2. Check if the first input is the "--help" string
if [ "$1" == "--help" ]; then
	printf "nickname:\n"
	printf "\tA handy tool for creating directory nickname associations that get stored in the $HOME/config/nickname.conf file.\n"
	printf "\tThis configuration file will ultimately be used by the go2 tool to help change directory faster and easier.\n"
	printf "Usage: \n"
	printf "\tSpecify a directory to nickname:\n"
	printf "\t\tnickname /path/to/dir mynickname\n"
	printf "\tNickname the current working directory:\n"
	printf "\t\tnickname mynickname\n"
fi

# 3. Parse and check the input
if [ "$#" -eq 1 ]; then
	DIR="$PWD"
	NN="$1"
elif [ "$#" -eq 2 ]; then
	# If an directory input was given, check to make sure it is valid
	if [ ! -d "$1" ]; then
		printf "Invalid directory: %s.\nPlease entery a valid directory to be nicknamed.\n", "$1"
		exit 1
	fi		
	
	DIR="$1"
	NN="$2"	
fi

# 4. Check to see if the config file exists, if it doesn't make it!
#CONFDIR="$HOME/.config/nickname" 
CONFDIR="$HOME/repos/go2"
CONFILE="$CONFDIR/nickname.conf"
if [ ! -d "$CONFDIR" ]; then
	echo "Creating $CONFILE"
	mkdir "$CONFDIR"
	touch "$CONFILE" 
fi

if [ ! -f "$CONFILE" ];then
	echo "Creating $CONFILE"
	touch "$CONFILE"
fi

# 4. Read and check the config file to ensure the directory 
verify_config "$DIR" "$NN" "$CONFILE"


